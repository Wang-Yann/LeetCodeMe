#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author        : Rock Wayne 
# @Created       : 2020-07-21 18:36:57
# @Last Modified : 2020-07-21 18:36:57
# @Mail          : lostlorder@gmail.com
# @Version       : alpha-1.0

"""
# ‰∏≠ÂøÉÂØπÁß∞Êï∞ÊòØÊåá‰∏Ä‰∏™Êï∞Â≠óÂú®ÊóãËΩ¨‰∫Ü 180 Â∫¶‰πãÂêéÁúãËµ∑Êù•‰æùÊóßÁõ∏ÂêåÁöÑÊï∞Â≠óÔºàÊàñËÄÖ‰∏ä‰∏ãÈ¢†ÂÄíÂú∞ÁúãÔºâ„ÄÇ 
# 
#  ËØ∑ÂÜô‰∏Ä‰∏™ÂáΩÊï∞Êù•Âà§Êñ≠ËØ•Êï∞Â≠óÊòØÂê¶ÊòØ‰∏≠ÂøÉÂØπÁß∞Êï∞ÔºåÂÖ∂ËæìÂÖ•Â∞Ü‰ºö‰ª•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÂΩ¢ÂºèÊù•Ë°®ËææÊï∞Â≠ó„ÄÇ 
# 
#  
# 
#  Á§∫‰æã 1: 
# 
#  ËæìÂÖ•: num = "69"
# ËæìÂá∫: true
#  
# 
#  Á§∫‰æã 2: 
# 
#  ËæìÂÖ•: num = "88"
# ËæìÂá∫: true 
# 
#  Á§∫‰æã 3: 
# 
#  ËæìÂÖ•: num = "962"
# ËæìÂá∫: false 
# 
#  Á§∫‰æã 4Ôºö 
# 
#  ËæìÂÖ•Ôºönum = "1"
# ËæìÂá∫Ôºötrue
#  
#  Related Topics ÂìàÂ∏åË°® Êï∞Â≠¶ 
#  üëç 14 üëé 0

"""

import pytest


# leetcode submit region begin(Prohibit modification and deletion)
class Solution:
    def isStrobogrammatic(self, num: str) -> bool:
        """Ê≤°ÊÑèÊÄù"""
        lookup = {
            "6": "9",
            "9": "6",
            "1": "1",
            "8": "8",
            "0": "0"
        }
        l, r = 0, len(num) - 1
        while l <= r:
            if lookup.get(num[l]) == num[r]:
                l += 1
                r -= 1
            else:
                return False
        return True


# leetcode submit region end(Prohibit modification and deletion)

@pytest.mark.parametrize("kw,expected", [
    [dict(num="69"), True],
    [dict(num="88"), True],
    [dict(num="962"), False],
    [dict(num="1"), True],
    [dict(num="101"), True],
    [dict(num="2"), False],
])
def test_solutions(kw, expected):
    assert Solution().isStrobogrammatic(**kw) == expected


if __name__ == '__main__':
    pytest.main(["-q", "--color=yes", "--capture=no", __file__])

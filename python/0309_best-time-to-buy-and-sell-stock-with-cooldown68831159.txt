class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        """
        注意初始值的含义有效性
        dp[i][0] = max(dp[i-1][0], dp[i-1][1] + prices[i])
        dp[i][1] = max(dp[i-1][1], dp[i-2][0] - prices[i])
        解释：第 i 天选择 buy 的时候，要从 i-2 的状态转移，而不是 i-1 。
        """
        n = len(prices)
        INT_MIN=-2**31
        dp = [[0,INT_MIN] for _ in range(n)]
        for i in range(n):
            dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + prices[i])
            dp[i][1] = max(dp[i - 1][1], dp[i - 2][0] - prices[i])
        return dp[n - 1][0]



# runtime_error:Line 15: IndexError: list index out of range
# last_testcase:[]
